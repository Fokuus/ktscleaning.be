---
import "@styles/root.less";
import "@styles/reviews.less";
import "@styles/services.less";
import BaseLayout from "@layouts/BaseLayout.astro";
import CTA from "@components/CTA.astro";
import FAQ from "@components/FAQ.astro";
import BlogMasonryGallery from "@components/BlogMasonryGallery.astro";
import FeaturedProjects from "@components/FeaturedProjects.astro";
import { getCollection } from "astro:content";
import { getImage } from "astro:assets";

// Get blog posts for the gallery
const posts = await getCollection("blog");
// Sort posts by date (newest first)
posts.sort((a, b) => new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf());

// Process blog post images
const processedPosts = await Promise.all(posts.map(async (post) => {
  const imageData = post.data.image;
  
  // Handle string paths
  if (typeof imageData === 'string') {
    // For relative paths, we'd need a different approach - using a fallback for now
    return {
      ...post,
      processedImage: imageData
    };
  }
  
  // Handle image objects
  if (imageData && typeof imageData === 'object' && 'src' in imageData) {
    return {
      ...post,
      processedImage: imageData.src
    };
  }
  
  // Fallback
  return {
    ...post,
    processedImage: '/assets/images/blog/blog-cover.jpg'
  };
}));

// Optimize our landing image and pass it as props to the BaseLayout (for preloading) and Landing (for rendering)
import landingImage from "@assets/images/landing.jpg" // <-- THE PATH TO THE ASSET YOU WANT TO PRELOAD - The asset must live in src
const optimizedImage = await getImage({src: landingImage, format: 'avif'})
---

<BaseLayout
  title="Pixel Perfect Websites"
  description="Meta description for the page"
  preloadedImage = {optimizedImage}
>

<!-- ============================================ -->
<!--                    Hero                      -->
<!-- ============================================ -->

<section id="hero-1806">
  <div class="cs-container">
      <div class="cs-content">
          <span class="cs-topper">Professionele Reiniging</span>
          <h1 class="cs-title">Gespecialiseerde Schoonmaakdiensten</h1>
          <p class="cs-text">
              Professionele en gespecialiseerde schoonmaakdiensten voor elke situatie, van crime scene cleaning tot industriële reiniging.
          </p>
          <a href="/contact" class="cs-button-solid">Offerte Aanvragen</a>
          <ul id="stats-1336" class="cs-ul">
            <li class="cs-item">
                <span class="cs-number">24/7</span>
                <h3 class="cs-h3">Beschikbaarheid</h3>
            </li>
            <li class="cs-item">
                <span class="cs-number">10+</span>
                <h3 class="cs-h3">Jaren ervaring</h3>
            </li>
            <li class="cs-item">
                <span class="cs-number">100%</span>
                <h3 class="cs-h3">Klanttevredenheid</h3>
            </li>
        </ul>
      </div>
      <div class="cs-video-group">
          <div class="cs-video-wrapper">
              <!--Compress your video and upload it to a CDN like Digital Oceans Spaces so the video file doesn't cause load time issues. You can also remove the video tag and uncomment the picture tag to use a image instead of a video. Don't forget to remove the cs-play button!-->
              <video loading="lazy" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Videos/gym.mp4" autoplay="false"></video>
              <!-- <picture class="cs-picture">
                  <source media="(max-width: 600px)" srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/People/gym-hero.jpg">
                  <source media="(min-width: 601px)" srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/People/gym-hero.jpg">
                  <img loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/People/gym-hero.jpg" alt="body builder" width="630" height="877">
              </picture> -->
              <button class="cs-play" aria-label="click to play video">
                  <img src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Icons/play-right.svg" alt="play icon" class="cs-icon" width="24" height="24" aria-hidden="true" decoding="async">
              </button>
          </div>
          <div class="cs-box">
              <img class="cs-box-icon" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Icons/dna.svg" alt="dna icon" width="48" height="48" aria-hidden="true" decoding="async">
              <span class="cs-header">We’ve Over 26 Years of Experience</span>
          </div>
      </div>
  </div>
</section>
                              
<style lang="less">
/* Global Button Style */
.cs-button-solid,
.cs-button,
.cs-button-solid:any-link,
.cs-button:any-link,
button.cs-button-solid,
button.cs-button {
    font-size: 1rem !important;
    line-height: 1.2em !important;
    text-decoration: none !important;
    font-family: 'Lato', sans-serif !important;
    font-weight: 300 !important; /* Light font weight */
    text-transform: none !important; /* No all caps */
    margin: 0 !important;
    color: #fff !important;
    min-width: 150px !important;
    padding: 0.75rem 1.5rem !important;
    background-color: var(--primary) !important;
    border-radius: 0.25rem !important;
    display: inline-flex !important; /* Changed to inline-flex for better centering */
    justify-content: center !important; /* Perfect centering horizontally */
    align-items: center !important; /* Perfect centering vertically */
    position: relative !important;
    z-index: 1 !important;
    box-sizing: border-box !important;
    transition: background-color 0.3s ease !important;
}

.cs-button-solid:hover,
.cs-button:hover,
button.cs-button-solid:hover,
button.cs-button:hover {
    background-color: var(--primaryDark) !important;
}

/*-- -------------------------- -->
<---            Hero            -->
<--- -------------------------- -*/




/* Mobile - 360px */
/* you can copy and paste these styles into the section CSS where you placed the #list-1336 HTML, or you can place it in your global stylesheet so you can reuse the HTML in any Side By Side section on your site. That way when you make changes to it, it will also change everywhere in the site */
#stats-1336 {
    width: 100%;
    max-width: (630/16rem);
    padding: 0;
    /* 32px - 48px */
    margin: clamp(2rem, 5vw, 3rem) 0 0 0;
    /* 32px - 48px */
    padding: clamp(2rem, 5vw, 3rem) 0 0 0;
    border-top: 1px solid #e8e8e8;
    display: flex;
    justify-content: space-between;
    align-items: center;
    column-gap: (12/16rem);

    .cs-item {
        list-style: none;
        width: 32%;
        /* making flex so we can align a heading with 1 line to the bottom */
        display: flex;
        flex-direction: column;
        align-self: stretch;
        align-content: space-between;
    }

    .cs-number {
        font-size: (25/16rem);
        line-height: 1.2em;
        font-weight: 700;
        text-align: left;
        color: var(--primary);
        display: block;
        margin: 0 0 (8/16rem) 0;
    }

    .cs-h3 {
        font-size: (16/16rem);
        line-height: 1.5em;
        font-weight: 400;
        text-align: left;
        /* auto margin top will push text to bottom if there's only one line */
        margin: 0;
        color: var(--bodyTextColor);
    }
}

/* Dark Mode, copy and paste only the styles inside the #list-1336 brackets into your section's dark mode media query */
body.dark-mode {
    #stats-1336 {
        .cs-number,
        .cs-h3 {
            color: var(--bodyTextColorWhite);
        }

        .cs-h3 {
            opacity: 0.8;
        }
    }
}

                                




/* Mobile - 360px */




@media only screen and (min-width: 0rem) {
    #hero-1806 {
        /* 200px - 244px top */
        /* 60px - 100px  bottom */
        padding: clamp(12.5rem, 16.82vw, 15.25rem) (16/16rem) 0;
        /* clips the svg wave from overflowing */
        overflow: hidden;
        position: relative;
        z-index: 1;

        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            gap: (48/16rem);
        }

        .cs-content {
            text-align: center;
            max-width: (630/16rem);
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            position: relative;
            z-index: 2;
        }

        .cs-topper {
            font-size: (16/16rem);
            line-height: 1.2em;
            text-transform: uppercase;
            text-align: inherit;
            letter-spacing: 0.1em;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: (4/16rem);
            display: block;
        }

        .cs-title {
            /* 39px - 84px */
            font-size: clamp(2.4375rem, 6.3vw, 5.25rem);
            font-weight: 900;
            line-height: 1.2em;
            text-align: inherit;
            /* 23 characters including spaces wide */
            max-width: 23ch;
            margin: 0 0 (16/16rem) 0;
            color: var(--headerColor);
            position: relative;
        }

        .cs-text {
            /* 16px - 20px */
            font-size: clamp(1rem, 1.5vw, 1.25rem);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            max-width: (531/16rem);
            margin: 0 0 (32/16rem) 0;
            color: var(--bodyTextColor);
        }

        .cs-button-solid {
            font-size: (16/16rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
            font-weight: 700;
            text-align: center;
            margin: 0;
            color: #fff;
            min-width: (150/16rem);
            padding: 0 (24/16rem);
            background-color: var(--primary);
            border-radius: (4/16rem);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;

            &:before {
                content: "";
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                border-radius: (4/16rem);
                transition: width 0.3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-video-group {
            width: 100%;
            height: 100vw;
            min-height: (340/16rem);
            display: flex;
            flex-direction: column;
            row-gap: (16/16rem);
            position: relative;
            z-index: 1;

            &:before {
                /* light grey section background. We attach it as a pseudo to the video group so it can be responsive and anchored in position to always be in the same position behind the cs-box */
                content: '';
                width: 300vw;
                height: 500%;
                background: #f7f7f7;
                position: absolute;
                display: block;
                bottom: (54/16rem);
                left: 50%;
                z-index: -1;
                transform: translateX(-50%);
            }
        }

        .cs-box {
            width: 100%;
            height: auto;
            margin: 0;
            /* 24px - 32px */
            padding: clamp(1.5rem, 4vw, 2rem);
            background-color: var(--primary);
            display: flex;
            align-items: flex-start;
            /* 16px - 24px */
            gap: clamp(1rem, 2vw, 1.5rem);
        }

        .cs-header {
            /* 20px - 25px */
            font-size: clamp(1.25rem, 2.5vw, 1.5625rem);
            line-height: 1.2em;
            font-weight: bold;
            margin: 0;
            padding: 0;
            color: var(--bodyTextColorWhite);
        }

        .cs-box-icon {
            /* 40px - 48px */
            width: clamp(2.5rem, 4vw, 3rem);
        }

        .cs-video-wrapper {
            width: 100%;
            /* changes to 90% at tablet, then back to 100% at desktop */
            height: 100%;
            display: block;
            position: relative;

            &:hover {
                cursor: pointer;
                .cs-play {
                    transform: translate(-50%, -50%) scale(1.2);
                }
            }

            video, .cs-picture {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                /* makes image act as a background image */
                object-fit: cover;

                img {
                    position: absolute;
                    top: 0;
                    left: 0;
                    height: 100%;
                    width: 100%;
                    /* makes image act as a background image */
                    object-fit: cover;
                }
            }
        }

        .cs-play {
            /* 80px - 120px */
            width: clamp(5rem, 14vw, 7.5rem);
            height: clamp(5rem, 14vw, 7.5rem);
            display: flex;
            pointer-events: none;
            justify-content: center;
            align-items: center;
            border-radius: 50%;
            background-color: rgba(255, 255, 255, .2);
            backdrop-filter: blur(8px);
            border: none;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            transition: transform .3s, opacity .3s;

            &.cs-hide {
                transform: translate(-50%, -50%) scale(0) !important;
                opacity: 0;
            }
        }

        .cs-icon {
            width: (20/16rem);
            height: auto;
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #hero-1806 {
        .cs-container {
            flex-direction: row;
            align-items: stretch;
            justify-content: space-between;
        }

        .cs-content {
            text-align: left;
            width: 47%;
            max-width: (522/16rem);
            /* 168px - 300pxm this maintains consistent space between the cs content and the cs-box so no matter how much content you add here, there will always be X amount of padding between the bottom of the cs-content and the bottom of the cs-video-group */
            padding-bottom: clamp(10.5rem, 30vw, 18.75rem);
            flex: none;
            align-items: flex-start;
            align-self: flex-start;
            order: 2;
        }

        .cs-title {
            max-width: 10ch;
        }

        .cs-video-group {
            width: 50%;
            max-width: (630/16rem);
            height: auto;
            /* 530px - 880px */
            min-height: clamp(33.125rem, 67vw, 55rem);

            &:before {
                bottom: (100/16rem);
            }
        }

        .cs-video-wrapper {
            /* changes back to 100% at desktop */
            height: 90%;
        }

        .cs-box {
            width: 80%;
            max-width: (307/16rem);
            flex-direction: column;
            position: absolute;
            /* chnages to 48px at desktop */
            bottom: 0;
            /* -112px to 200px */
            right: ~"calc(clamp(7.25rem, 17vw, 12.5rem)*-1)";
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #hero-1806 {
        .cs-video-wrapper {
            height: 100%;
        }

        .cs-box {
            bottom: (48/16rem);
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #hero-1806 {
            .cs-title, .cs-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-text {
                opacity: .8;
            }

            .cs-video-group {
                &:before {
                    background-color: rgba(0, 0, 0, .2);
                }
            }
        }
    }
}
                                
                                
</style>

<script lang="ts">
  function togglePlayButton() {
    // Select all elements with the .cs-picture class
    const pictures = document.querySelectorAll('#hero-1806 .cs-video-wrapper');
  
    // Add a click event listener to each .cs-picture element
    pictures.forEach(picture => {
      picture.addEventListener('click', () => {
        // Select all elements with the .cs-play class
        const playButtons = document.querySelectorAll('#hero-1806 .cs-play');
        
        // Toggle the .cs-hide class on each .cs-play element
        playButtons.forEach(button => {
          button.classList.toggle('cs-hide');
        });
      });
    });
  }
  
  // Call the function to activate the event listeners
  togglePlayButton();
  
  function toggleVideoPlayback() {
    // Select the video element
    const video = document.querySelector('#hero-1806 video');
  
    // Add a click event listener to the video
    video.addEventListener('click', () => {
      // Check if the video is paused
      if (video.paused) {
        video.play(); // Play the video if it is paused
      } else {
        video.pause(); // Pause the video if it is playing
      }
    });
  }
  
  // Call the function to activate the event listener
  toggleVideoPlayback();
                                
</script>

<!-- ============================================ -->
<!--                    Services                  -->
<!-- ============================================ -->

<section id="services-1252">
  <div class="cs-container">
      <div class="cs-content">
          <div class="cs-flex-group">
              <span class="cs-topper">Onze Diensten</span>
              <h2 class="cs-title">Gespecialiseerde Reinigingsdiensten</h2>
          </div>
          <p class="cs-text">
              KTS Cleaning biedt professionele schoonmaakdiensten voor elke situatie. Van crime scene cleaning tot industriële reiniging, wij zorgen voor een grondige en vakkundige aanpak.
          </p>
      </div>
      <ul class="cs-card-group">
          <li class="cs-item">
              <a href="/diensten/crime-scene-cleaning" class="cs-link">
                  <h3 class="cs-h3">Crime Scene Cleaning</h3>
                  <p class="cs-item-text">
                      Van de reiniging plaats delict, over schoonmaak en ontsmetting van gevangeniscellen en politievoertuigen, tot technische ontmanteling van cannabisplantages.
                  </p>
              </a>
              <picture class="cs-item-background">
                  <source media="(max-width: 600px)" srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/MISC/structure1.jpeg">
                  <source media="(min-width: 601px)" srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/MISC/structure1.jpeg">
                  <img decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/MISC/structure1.jpeg" alt="Crime Scene Cleaning" width="413" height="374" aria-hidden="true">
              </picture>
          </li>
          <li class="cs-item">
              <a href="/diensten/gespecialiseerde-schoonmaak" class="cs-link">
                  <h3 class="cs-h3">Gespecialiseerde Schoonmaak</h3>
                  <p class="cs-item-text">
                      Van het eenmalig reinigen van een zwaar vervuilde woning of na een onopgemerkt overlijden tot het ontruimen van inboedel of een periodieke stal- en industriële reiniging.
                  </p>
              </a>
              <picture class="cs-item-background">
                  <source media="(max-width: 600px)" srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/MISC/structure2.jpg">
                  <source media="(min-width: 601px)" srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/MISC/structure2.jpg">
                  <img decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/MISC/structure2.jpg" alt="Gespecialiseerde Schoonmaak" width="413" height="374" aria-hidden="true">
              </picture>
          </li>
          <li class="cs-item">
              <a href="/diensten/industriele-reiniging" class="cs-link">
                  <h3 class="cs-h3">Industriële Reiniging</h3>
                  <p class="cs-item-text">
                      Bij intensief gebruik van productiehallen en werkruimtes is een professionele en industriële reiniging noodzakelijk om het werkcomfort en de veiligheid te garanderen.
                  </p>
              </a>
              <picture class="cs-item-background">
                  <source media="(max-width: 600px)" srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/MISC/structure3.jpg">
                  <source media="(min-width: 601px)" srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/MISC/structure3.jpg">
                  <img decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/MISC/structure3.jpg" alt="Industriële Reiniging" width="413" height="374" aria-hidden="true">
              </picture>
          </li>
      </ul>
  </div>
</section>
                              

<style lang="less">
  /*-- -------------------------- -->
<---          Services          -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #services-1252 {
        padding: var(--sectionPadding);
        position: relative;
        z-index: 10;

        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }

        .cs-title {
            max-width: 20ch;
        }

        .cs-card-group {
            margin: 0;
            padding: 0;
            width: 100%;
            display: grid;
            grid-template-columns: repeat(12, 1fr);
            /* 16px - 20px */
            gap: clamp(1rem, 2vw, 1.25rem);
        }

        .cs-item {
            width: 100%;
            text-align: left;
            list-style: none;
            margin: 0;
            padding: 0;
            background-color: #000;
            border-radius: (8/16rem);
            /* clips background image corners */
            overflow: hidden;
            box-shadow: 0px 12px 80px 0px rgba(26, 26, 26, 0.08);
            /* prevents padding and border from affecting height and width */
            box-sizing: border-box;
            grid-column: span 12;
            grid-row: span 1;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            justify-content: flex-end;
            position: relative;
            z-index: 1;

            &:hover {
                .cs-item-background {
                    img {
                        opacity: 0.4;
                        transform: scale(1.3);
                    }
                }

                .cs-h3 {
                    color: var(--primary);
                }
            }

            &:before {
                content: "";
                width: 100%;
                height: 100%;
                border: 1px solid rgba(255, 255, 255, 0.4);
                /* prevents border from affecting height and width */
                box-sizing: border-box;
                border-radius: (8/16rem);
                /* prevents the mouse from interacting with it so when you hover hover the other elements inside the card it doesn't block your mouse from hovering over them */
                pointer-events: none;
                opacity: 1;
                position: absolute;
                display: block;
                top: 0;
                left: 0;
                z-index: 10;
            }
        }

        .cs-link {
            text-decoration: none;
            /* 125px - 236px */
            /* padding goes on the link, not the cs-item as is normal. We do this because we want the whole card to be hoverable. So we add the padding to the link tag to create the space inside the card. By adding the space inside the cs-link tag we can make the whole card hoverable since the padding is now contributing to the height and widht of the link */
            padding: clamp(7.8125rem, 19vw, 14.75rem) (24/16rem) (24/16rem);
        }

        .cs-h3 {
            /* 20px - 25px */
            font-size: clamp(1.25rem, 2.5vw, 1.5625rem);
            line-height: 1.2em;
            font-weight: bold;
            text-align: inherit;
            margin: 0 0 (12/16rem) 0;
            color: var(--bodyTextColorWhite);
            transition: color 0.3s;
        }

        .cs-item-text {
            /* 14px - 16px */
            font-size: clamp(0.875rem, 1.5vw, 1rem);
            line-height: 1.5em;
            max-width: (450/16rem);
            margin: 0;
            padding: 0;
            color: var(--bodyTextColorWhite);
        }

        .cs-item-background {
            width: 100%;
            height: 100%;
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            z-index: -1;

            &:before {
                /* background color overlay */
                content: "";
                position: absolute;
                display: block;
                height: 100%;
                width: 100%;
                background: #1a1a1a;
                opacity: 0.24;
                top: 0;
                left: 0;
                z-index: 1;
            }

            &:after {
                /* background color overlay */
                content: "";
                position: absolute;
                display: block;
                height: 100%;
                width: 100%;
                background: -moz-linear-gradient(
                    top,
                    rgba(0, 0, 0, 0) 0%,
                    rgba(0, 0, 0, 1) 100%
                ); /* FF3.6-15 */
                background: -webkit-linear-gradient(
                    top,
                    rgba(0, 0, 0, 0) 0%,
                    rgba(0, 0, 0, 1) 100%
                ); /* Chrome10-25,Safari5.1-6 */
                background: linear-gradient(
                    to bottom,
                    rgba(0, 0, 0, 0) 0%,
                    rgba(0, 0, 0, 1) 100%
                );
                opacity: 0.4;
                bottom: 0;
                left: 0;
                z-index: 2;
            }

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                /* Makes img tag act as a background image */
                object-fit: cover;
                transition:
                    transform 0.6s,
                    opacity 0.3s;
            }
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #services-1252 {
        padding-bottom: 0;

        .cs-content {
            flex-direction: row;
            justify-content: space-between;
            align-items: center;
            gap: (48/16rem);
        }

        .cs-title {
            margin: 0;
        }

        .cs-flex-group {
            width: 50%;
        }

        .cs-item {
            grid-column: span 6;
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #services-1252 {
        .cs-item {
            grid-column: span 3;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #services-1252 {
            .cs-title,
            .cs-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-text {
                opacity: 0.8;
            }
        }
    }
}

                                
</style>

<!-- ============================================ -->
<!--                Why Choose Us                 -->
<!-- ============================================ -->

<section id="why-choose-223">
  <div class="cs-container">
      <div class="cs-content">
          <span class="cs-topper">Waarom KTS Cleaning</span>
          <h2 class="cs-title">Dringend hulp of offerte nodig?</h2>
          <p class="cs-text">
              Bel ons op het nummer +32 (0)471 70 80 90 of neem contact op via onderstaand formulier.
          </p>
          <a href="/contact" class="cs-button-solid">Neem contact op</a>
      </div>
      <ul class="cs-card-group">
          <li class="cs-item">
              <img class="cs-icon" loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons/cleaning-icon.svg" alt="Professioneel" width="72" height="72">
              <h3 class="cs-h3">Professioneel</h3>
              <p class="cs-item-text">
                  Onze ervaren teams werken met professionele apparatuur en reinigingsmiddelen voor een optimaal resultaat.
              </p>
          </li>
          <li class="cs-item">
              <img class="cs-icon" loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons/time-icon.svg" alt="24/7 Beschikbaar" width="72" height="72">
              <h3 class="cs-h3">24/7 Beschikbaar</h3>
              <p class="cs-item-text">
                  Wij zijn 24 uur per dag, 7 dagen per week beschikbaar voor dringende reinigingsopdrachten.
              </p>
          </li>
          <li class="cs-item">
              <img class="cs-icon" loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons/certified-icon.svg" alt="Gecertificeerd" width="72" height="72">
              <h3 class="cs-h3">Gecertificeerd</h3>
              <p class="cs-item-text">
                  Onze medewerkers zijn volledig opgeleid en gecertificeerd voor alle specialistische reinigingswerkzaamheden.
              </p>
          </li>
          <li class="cs-item">
              <img class="cs-icon" loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons/satisfaction-icon.svg" alt="Klanttevredenheid" width="72" height="72">
              <h3 class="cs-h3">100% Klanttevredenheid</h3>
              <p class="cs-item-text">
                  Wij streven naar 100% klanttevredenheid en werken nauwkeurig volgens de hoogste kwaliteitsnormen.
              </p>
          </li>
      </ul>
  </div>
</section>
                              

<style lang="less">

  /*-- -------------------------- -->
<---        Why Choose          -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #why-choose-223 {
        padding: var(--sectionPadding);
        background-color: #fafbfc;

        .cs-container {
            width: 100%;
            /* changes to 1280px on tablet */
            max-width: (550/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            max-width: (624/16rem);
            margin-right: auto;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }

        .cs-text {
            margin-bottom: (16/16rem);
            &:last-of-type {
                margin-bottom: (32/16rem);
            }
        }

        .cs-card-group {
            width: 100%;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            gap: (20/16rem);
        }

        .cs-item {
            text-align: left;
            list-style: none;
            width: 100%;
            /* 32px - 44px top & bottom, 24px - 32px left & right */
            padding: clamp(2rem, 4vw, 2.75rem) clamp(1.5rem, 4vw, 2rem);
            margin: 0;
            border-radius: (5/16rem);
            border: 1px solid #dad9e3;
            display: flex;
            justify-content: flex-start;
            align-items: flex-start;
            flex-wrap: wrap;
            /* 16px - 32px */
            column-gap: clamp(1rem, 2vw, 2rem);
            /* 24px - 28px */
            row-gap: clamp(1.5rem, 1.5vw, 1.75rem);
            /* prevents padding from adding to height and width */
            box-sizing: border-box;
            transition: background-color 0.3s;

            &:hover {
                background-color: var(--primary);

                .cs-icon {
                    filter: grayscale(1) brightness(1000%);
                }

                .cs-h3,
                .cs-item-text {
                    color: #fff;
                }
            }
        }

        .cs-icon {
            /* 70px - 80px */
            width: clamp(4.375rem, 7vw, 5rem);
            margin: 0;
            height: auto;
            margin: 0;
            display: block;
        }

        .cs-h3 {
            /* 25px - 31px */
            font-size: clamp(1.5625rem, 2vw, 1.9375rem);
            line-height: 1.2em;
            font-weight: 700;
            text-align: inherit;
            width: 55%;
            margin: 0;
            color: var(--headerColor);
            transition: color 0.3s;
        }

        .cs-item-text {
            font-size: (16/16rem);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            margin: auto 0 0 0;
            color: var(--bodyTextColor);
            transition: color 0.3s;
        }

        .cs-button-solid {
            font-size: (16/16rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
            font-weight: 700;
            text-align: center;
            margin: 0;
            color: #fff;
            min-width: (150/16rem);
            padding: 0 (24/16rem);
            background-color: var(--primary);
            border-radius: (4/16rem);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;

            &:before {
                content: "";
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                border-radius: (4/16rem);
                transition: width 0.3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #why-choose-223 {
        .cs-container {
            max-width: (1280/16rem);
        }

        .cs-content {
            width: 70%;
        }

        .cs-card-group {
            /* switch to grid since there's no chance of adding or removing cards in this design.  We can be more set and rigid in our layout of this section and use grid for better spacing */
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: (20/16rem);
            /* if different boxes are different heights, this makes them all the same height so the grid is always even */
            align-items: stretch;
        }

        .cs-item {
            grid-column: span 4;
        }
    }
}

/* Small Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #why-choose-223 {
        .cs-container {
            flex-direction: row;
            justify-content: space-between;
        }

        .cs-card-group {
            width: 60%;
            max-width: (758/16rem);
            /* prevents flexbox from squishing it */
            flex: none;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #why-choose-223 {
            background-color: rgba(0, 0, 0, 0.2);

            .cs-topper {
                color: var(--primaryLight);
            }

            .cs-title,
            .cs-text,
            .cs-h3,
            .cs-item-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-icon {
                filter: grayscale(1) brightness(1000%);
            }
        }
    }
}

                                
</style>

<!-- ============================================ -->
<!--                     Quote                    -->
<!-- ============================================ -->

<section id="quote-2012">
  <div class="cs-container">
      <div class="cs-review">
          <span class="cs-topper">Klantervaring</span>
          <p class="cs-review-text">
          KTS Cleaning heeft ons geholpen na een moeilijke situatie. Hun professionele en discrete aanpak heeft ons enorm geholpen. Het team werkte snel en grondig, waardoor we weer verder konden met ons leven.
          </p>
          <div class="cs-flex-group">
              <span class="cs-name">
                  Familie Janssens
              </span>
              <span class="cs-job">Tevreden klant</span>
          </div>
      </div>
      <ul class="cs-card-group">
          <li class="cs-item">
              <a class="cs-link">
                  <picture class="cs-picture">
                      <source media="(max-width: 600px)" srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/People/dentist6.jpg">
                      <source media="(min-width: 601px)" srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/People/dentist6.jpg">
                      <img decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/People/dentist6.jpg" alt="dental patient" width="305" height="550" aria-hidden="true">
                  </picture>
                  <!--On Hover Image-->
                  <img class="cs-resize" loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Icons/white-resize.svg" alt="resize" width="60" height="60" aria-hidden="true">
              </a>
          </li>
          <li class="cs-item">
              <a class="cs-link">
                  <picture class="cs-picture">
                      <source media="(max-width: 600px)" srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/People/dentist7.jpeg">
                      <source media="(min-width: 601px)" srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/People/dentist7.jpeg">
                      <img decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/People/dentist7.jpeg" alt="dental patient" width="305" height="550" aria-hidden="true">
                  </picture>
                  <!--On Hover Image-->
                  <img class="cs-resize" loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Icons/white-resize.svg" alt="resize" width="60" height="60" aria-hidden="true">
              </a>
          </li>
          <li class="cs-item">
              <a class="cs-link">
                  <picture class="cs-picture">
                      <source media="(max-width: 600px)" srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/People/dentist8.jpeg">
                      <source media="(min-width: 601px)" srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/People/dentist8.jpeg">
                      <img decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/People/dentist8.jpeg" alt="dental patient" width="305" height="550" aria-hidden="true">
                  </picture>
                  <!--On Hover Image-->
                  <img class="cs-resize" loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Icons/white-resize.svg" alt="resize" width="60" height="60" aria-hidden="true">
              </a>
          </li>
          <li class="cs-item">
              <a class="cs-link">
                  <picture class="cs-picture">
                      <source media="(max-width: 600px)" srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/People/dentist9.jpeg">
                      <source media="(min-width: 601px)" srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/People/dentist9.jpeg">
                      <img decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/People/dentist9.jpeg" alt="dental patient" width="305" height="550" aria-hidden="true">
                  </picture>
                  <!--On Hover Image-->
                  <img class="cs-resize" loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Icons/white-resize.svg" alt="resize" width="60" height="60" aria-hidden="true">
              </a>
          </li>
      </ul>
  </div>
  <img class="cs-waves" loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Graphics/white-waves2.svg" alt="white waves" width="1920" height="1104" aria-hidden="true">
</section>
                              
<style lang="less">
  /*-- -------------------------- -->
<---           Quote            -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #quote-2012 {
        padding: var(--sectionPadding);
        overflow: hidden;
        position: relative;

        &::before {
            content: "";
            width: 100%;
            height: 60vh;
            background-color: var(--primary);
            opacity: 0.1;
            position: absolute;
            top: 0;
            right: 0;
            z-index: -1;
        }

        .cs-container {
            width: 100%;
            max-width: (704/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            /* 48px - 100px */
            gap: clamp(3rem, 6.5vw, 6.25rem);
        }

        .cs-review {
            text-align: center;
            width: 100%;
            /* prevents padding from adding to height and width */
            box-sizing: border-box;
            padding: 0;
            border-radius: (40/16rem);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            position: relative;
            z-index: 1;
        }

        .cs-topper {
            color: var(--secondary);
        }

        .cs-review-text {
            /* 25px - 39px */
            font-size: clamp(1.5625rem, 3vw, 2.4375rem);
            font-weight: 900;
            line-height: 1.2em;
            /* 24px - 32px */
            margin: 0 0 clamp(1.5rem, 3vw, 2rem) 0;
            color: var(--headerColor);
            z-index: 1;
        }

        .cs-flex-group {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: (4/16rem);
        }

        .cs-name {
            /* 16px - 25px */
            font-size: clamp(1rem, 2.3vw, 1.5625rem);
            font-weight: 700;
            line-height: 1.2em;
            margin: 0;
            /* in case one card has more text than the other, this pushes up against the review text so the name and title are always at the bottom. Only works if parent is a flexbox */
            margin-top: auto;
            color: var(--primary);
            display: block;
        }

        .cs-job {
            /* 14px - 16px */
            font-size: clamp(0.875rem, 1.6vw, 1rem);
            line-height: 1.5em;
            margin: 0;
            color: var(--bodyTextColor);
            display: block;
        }

        .cs-card-group {
            width: 100%;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            /* 16px - 20px */
            gap: clamp(1rem, 2vw, 1.25rem);
        }

        .cs-item {
            text-align: left;
            list-style: none;
            width: 100%;
            min-width: 0;
            /* 420px - 550px */
            height: clamp(26.25rem, 40vw, 34.375rem);
            margin: 0;
            /* prevents padding and border from affecting height and width */
            box-sizing: border-box;
            padding: 0;
            box-shadow: 0px 12px 80px 0px rgba(26, 26, 26, 0.08);
            display: flex;
            flex-direction: column;
            justify-content: flex-end;
            align-items: flex-start;
            position: relative;
            z-index: 1;
            transition: width 0.3s ease, flex 0.3s ease;

            &.expanded {
                width: 40%; /* Expanded width */
                flex: none;
            }
        }

        .cs-link {
            text-decoration: none;
            width: 100%;
            height: 100%;
            box-sizing: border-box;
            border: none;
            display: flex;
            justify-content: center;
            align-items: center;
            /* we use flexbox here to grow the link to fit the whole item, making it clickable everywhere, no matter the size */
            position: relative;
            z-index: 1;

            &::after {
                /* hover overlay */
                content: "";
                width: 100%;
                height: 100%;
                opacity: 0;
                position: absolute;
                top: 0;
                right: 0;
                z-index: -1;
                /* as we can't animate background gradients, we animate the change of opacity from 0 to 1 */
                transition: opacity 0.3s;
            }
        }

        .cs-number {
            /* 25px - 39px */
            font-size: clamp(1.5625rem, 2.7vw, 2.4375rem);
            font-weight: bold;
            color: var(--bodyTextColorWhite);
            opacity: 0;
            position: absolute;
            top: 0;
            transition:
                opacity 0.3s,
                top 0.3s;
        }

        .cs-h3 {
            /* 20px - 25px */
            font-size: clamp(1.25rem, 1.8vw, 1.5625rem);
            font-weight: bold;
            line-height: 1.2em;
            text-align: inherit;
            margin: 0 0 (4/16rem) 0;
            color: var(--bodyTextColorWhite);
            transition: color 0.3s;
        }

        .cs-item-text {
            /* 14px - 16px */
            font-size: clamp(0.875rem, 1.5vw, 1rem);
            line-height: 1.5em;
            margin: 0;
            padding: 0;
            color: var(--bodyTextColorWhite);
        }

        .cs-picture {
            width: 100%;
            height: 100%;
            overflow: hidden;
            border-radius: (8/16rem);
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            z-index: -1;

            &:after {
                /* background color overlay on hover */
                content: "";
                width: 100%;
                height: 100%;
                background: linear-gradient(0deg, rgba(0, 0, 0, 0.20) 0%, rgba(0, 0, 0, 0.20) 100%);
                opacity: 0;
                display: block;
                position: absolute;
                bottom: 0;
                left: 0;
                z-index: 5;
                transition: opacity 0.3s;
            }

            img {
                width: 100%;
                height: 100%;
                /* Makes img tag act as a background image */
                object-fit: cover;
                position: absolute;
                top: 0;
                left: 0;
                z-index: -1;
                transition: transform 0.3s;
            }
        }

        .cs-resize {
            /* 48px -60px */
            width: clamp(3rem, 6vw, 3.75rem);
            height: auto;
            opacity: 0;
            transition: opacity 0.3s;
        }

        .cs-waves {
            width: 150%;
            height: 100vh;
            position: absolute;
            top: 0;
            left: 0;
            z-index: 0;
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #quote-2012 {
        .cs-container {
            max-width: (1280/16rem);
        }

        .cs-card-group {
            flex-direction: row;
        }

        .cs-item {
            width: 25%;
            flex: 1;

            &:hover {
                .cs-picture {
                    &::after {
                        opacity: 1;
                    }

                    img {
                        transform: scale(1.2);
                    }
                }

                .cs-resize {
                    opacity: 1;
                }
            }
        }
    }
}

/* Large Desktop - 1300px */
@media only screen and (min-width: 81.25rem) {
    #quote-2012 {
        .cs-item {
            width: 25%;
        }

        .cs-resize {
            display: none;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #quote-2012 {
            background-color: rgba(0, 0, 0, 0.6);

            .cs-review-text,
            .cs-job {
                color: var(--bodyTextColorWhite);
            }

            .cs-job {
                opacity: 0.8;
            }

            .cs-waves {
                opacity: 0.2;
            }
        }
    }
}
                                
</style>

<script lang="ts">
    document.addEventListener('DOMContentLoaded', function() {
  const items = document.querySelectorAll('.cs-item');
  let expandedItem = null;
  const minWidth = 768; // Minimum width in pixels for the script to be active
  const maxWidth = 1300; // Maximum width in pixels for the script to be active

  function handleResize() {
    const windowWidth = window.innerWidth;
    if (windowWidth >= minWidth && windowWidth < maxWidth) {
      addClickListeners();
      resetItems();
    } else {
      removeClickListeners();
      items.forEach(item => {
        item.classList.remove('expanded', 'collapsed');
      });
    }
  }

  function addClickListeners() {
    items.forEach(item => {
      item.addEventListener('click', itemClickHandler);
    });
  }

  function removeClickListeners() {
    items.forEach(item => {
      item.removeEventListener('click', itemClickHandler);
    });
  }

  function itemClickHandler(e) {
    e.preventDefault();

    if (this === expandedItem) {
      collapseItem(this);
    } else {
      if (expandedItem) {
        collapseItem(expandedItem);
      }
      expandItem(this);
    }
  }

  function expandItem(clickedItem) {
    resetItems(); // Reset all items first

    // Add a class to expand the clicked item
    clickedItem.classList.add('expanded');
    expandedItem = clickedItem;

  }

  function collapseItem(item) {
    item.classList.remove('expanded');
    expandedItem = null;

    items.forEach(otherItem => {
      otherItem.classList.remove('collapsed');
    });
  }

  function resetItems() {
    items.forEach(item => {
      item.classList.remove('expanded', 'collapsed');
    });
    expandedItem = null;
  }


  // Initial setup
  handleResize();

  // Add event listener for window resize
  window.addEventListener('resize', handleResize);
});
                                
</script>

<!-- ============================================ -->
<!--                   Gallery                    -->
<!-- ============================================ -->

<section id="gallery-406">
  <div class="cs-container">
      <div class="cs-content">
          <span class="cs-topper">Onze Blog</span>
          <h2 class="cs-title">Laatste Artikelen</h2>
      </div>
       <div class="cs-gallery-wrapper">
           <div class="cs-gallery">
                {processedPosts.slice(0, 4).map((post) => (
                    <a href={`/blog/${post.slug}`} class="cs-image-link">
                        <div class="cs-image-container">
                            <img loading="lazy" decoding="async" src={post.processedImage} alt={post.data.imageAlt || post.data.title} class="cs-card-image">
                        </div>
                        <div class="cs-image-overlay">
                            <h3 class="cs-image-title">{post.data.title}</h3>
                            <img class="cs-resize" loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Icons/white-resize.svg" alt="resize" width="60" height="60" aria-hidden="true">
                        </div>
                    </a>
                ))}
           </div>
           <div class="cs-button-wrapper">
               <a href="/blog" class="cs-button-solid">Bekijk meer blogs</a>
           </div>
       </div>
  </div>
</section>
                              
<style lang="less">
/*-- -------------------------- -->
<---          Gallery           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #gallery-406 {
        padding: var(--sectionPadding);

        .cs-container {
            width: 100%;
            /* changes to 955px at desktop */
            max-width: (955/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
            position: relative;
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }

        .cs-title {
            margin: 0 0 (24/16rem) 0;
        }

        .cs-button-group {
            margin: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-wrap: wrap;
            row-gap: (8/16rem);
            column-gap: (32/16rem);
        }

        .cs-button {
            font-size: (16/16rem);
            line-height: 1.5em;
            color: var(--bodyTextColor);
            background-color: transparent;
            border: none;
            transition: color 0.3s;
            &:hover {
                color: var(--primary);
                cursor: pointer;
            }
            &.cs-active {
                color: var(--primary);
            }
        }

        .cs-gallery-wrapper {
            width: 100%;
            position: relative;
            z-index: 1;
        }

        .cs-gallery {
            width: 100%;
            padding: 0;
            margin: 0;
            opacity: 1;
            visibility: visible;
            position: relative;
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            /* 16px - 20px */
            gap: clamp(1.5rem, 2vw, 2rem);
            transition:
                transform 0.7s,
                opacity 0.3s,
                visibility 0.5s,
                top 0.3s,
                left 0.3s;
            /* makes the transform scaling origin the top left corner, dictates the direction by which the scale transforms animate towards */
            transform-origin: left top;

            &.cs-hidden {
                position: absolute;
                /* by using visibility:hidden instead of display:none, we can see the animations from the opacity and transforms, display:none won't render animations. */
                visibility: hidden;
                /* prevents the mouse from interacting with it */
                pointer-events: none;
                /* hidden galleries have a 0 opacity, and we animate the opacity to 1 when they become active */
                opacity: 0;
                /* this top and left value help control the animation, by setting it to position absolute and left 0, the gallery won't fly off screen to the left, it will stop its position to be at the left edge of the .cs-container (left: 0). Same for the top:0 value, the gallery won't go past that position when it animates */
                top: 0;
                left: 0;
                position: absolute;
                /* prevents the hidden galleries from overflowing the section, and makes a nice animations to transition to and from */
                transform: scaleY(0) scaleX(0);

                .cs-image {
                    /* when gallery is hidden, add these styles to the cs-image to animate from when cs-hidden is removed from the .cs-gallery */
                    transform: translateY(2.1875rem);
                    opacity: 0;
                }
            }
        }

        .cs-image-link {
            position: relative;
            display: block;
            width: 100%;
            height: 0;
            padding-bottom: 100%; /* Square aspect ratio */
            overflow: hidden;
            border-radius: (20/16rem);
            text-decoration: none;
            transition: transform 0.3s ease;

            &:hover {
                transform: translateY(-5px);
                
                .cs-image-overlay {
                    opacity: 1;
                }
                
                .cs-resize {
                    transform: translate(-50%, -50%) scale(1);
                }
                
                .cs-card-image {
                    transform: scale(1.1);
                }
            }
        }
        
        .cs-image-container {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
        }
        
        .cs-card-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            object-position: center;
            transition: transform 0.6s ease;
        }
        
        .cs-image-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            display: flex;
            flex-direction: column;
            justify-content: flex-end;
            align-items: center;
            opacity: 0;
            transition: opacity 0.3s ease;
            padding: 0;
        }
        
        .cs-image-title {
            color: white;
            font-size: 1.2rem;
            font-weight: 600;
            text-align: center;
            width: 100%;
            padding: 1rem;
            background: rgba(0, 0, 0, 0.5);
            margin: 0;
            position: relative;
            z-index: 2;
        }
        
        .cs-resize {
            position: absolute;
            top: 40%;
            left: 50%;
            transform: translate(-50%, -50%) scale(0.8);
            transition: transform 0.3s ease;
            z-index: 1;
        }
        
        .cs-button-wrapper {
            display: flex;
            justify-content: center;
            margin-top: 2rem;
            margin-bottom: 3rem; /* Extra margin to compensate for CTA section */
        }
        
        /* Button styles now use the global button style */
    }
}

/* Small Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #gallery-406 {
        .cs-container {
            max-width: (955/16rem);
        }
        .cs-image {
            width: 32.8%;
            max-width: (305/16rem);
            /* 300px - 400px */
            height: clamp(18.75rem, 30vw, 25rem);
            aspect-ratio: 1;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #gallery-406 {
            .cs-topper {
                color: var(--primaryLight);
            }
            .cs-title,
            .cs-text,
            .cs-button {
                color: var(--bodyTextColorWhite);
            }
        }
    }
}
                                
</style>

<!-- Gallery script removed as we no longer need filtering functionality -->