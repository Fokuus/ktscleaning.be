---
import BaseLayout from "@layouts/BaseLayout.astro";
import { getCollection, getEntry } from "astro:content";

// Generate static paths for all portfolio items
export async function getStaticPaths() {
  const portfolioEntries = await getCollection("portfolio");
  return portfolioEntries.map(entry => ({
    params: { slug: entry.id.replace(/\.md$/, '') },
    props: { entry },
  }));
}

// Get the portfolio entry from the props
const { entry } = Astro.props;
const { title, category, image, date } = entry.data;

// Format the date
const formattedDate = new Date(date).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

// Get the content
const { Content } = await entry.render();
---

<BaseLayout title={title} description={`Portfolio project: ${title}`}>
  <!-- Project Hero Header -->
  <section class="project-hero">
    <div class="project-hero-image">
      <img src={image} alt={title} />
    </div>
    <div class="project-hero-overlay">
      <div class="project-hero-content">
        <p class="project-category">{category}</p>
        <h1 class="project-title">{title}</h1>
        <div class="project-meta">
          <span class="project-date">{formattedDate}</span>
          <a href="/portfolio" class="project-back-link">View All Projects</a>
        </div>
      </div>
    </div>
  </section>

  <!-- Project Content -->
  <section class="project-content">
    <div class="container">
      <div class="project-details">
        <Content />
      </div>
    </div>
  </section>
</BaseLayout>

<style lang="less">
  /* Project Detail Page Styles */
  .project-hero {
    position: relative;
    width: 100%;
    height: 80vh;
    min-height: 500px;
    overflow: hidden;
    
    .project-hero-image {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 1;
      
      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center;
      }
    }
    
    .project-hero-overlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(to bottom, rgba(0,0,0,0.1) 0%, rgba(0,0,0,0.7) 100%);
      z-index: 2;
      display: flex;
      align-items: flex-end;
      padding: 3rem;
      box-sizing: border-box;
    }
    
    .project-hero-content {
      color: white;
      max-width: 800px;
      
      .project-category {
        text-transform: uppercase;
        font-size: 1rem;
        font-weight: 600;
        letter-spacing: 0.1em;
        margin: 0 0 0.5rem 0;
        opacity: 0.9;
      }
      
      .project-title {
        font-size: 3.5rem;
        font-weight: 900;
        line-height: 1.1;
        margin: 0 0 1.5rem 0;
      }
      
      .project-meta {
        display: flex;
        justify-content: space-between;
        align-items: center;
        
        .project-date {
          font-size: 1rem;
          opacity: 0.8;
        }
        
        .project-back-link {
          color: white;
          text-decoration: none;
          font-weight: 600;
          font-size: 1rem;
          position: relative;
          padding-bottom: 0.25rem;
          
          &:after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 2px;
            background-color: var(--primary);
            transform: scaleX(0);
            transform-origin: right;
            transition: transform 0.3s ease;
          }
          
          &:hover:after {
            transform: scaleX(1);
            transform-origin: left;
          }
        }
      }
    }
  }
  
  .project-content {
    padding: 5rem 0;
    
    .container {
      max-width: 800px;
      margin: 0 auto;
      padding: 0 1.5rem;
    }
    
    .project-details {
      font-size: 1.1rem;
      line-height: 1.7;
      color: var(--bodyTextColor);
      
      h2 {
        font-size: 2rem;
        color: var(--headerColor);
        margin: 2.5rem 0 1.5rem;
      }
      
      p {
        margin-bottom: 1.5rem;
      }
      
      img {
        max-width: 100%;
        border-radius: 8px;
        margin: 2rem 0;
      }
    }
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .project-hero {
      height: 60vh;
      
      .project-hero-content {
        .project-title {
          font-size: 2.5rem;
        }
      }
    }
  }
  
  @media (max-width: 480px) {
    .project-hero {
      .project-hero-overlay {
        padding: 2rem;
      }
      
      .project-hero-content {
        .project-title {
          font-size: 2rem;
        }
        
        .project-meta {
          flex-direction: column;
          align-items: flex-start;
          gap: 1rem;
        }
      }
    }
  }
  
  /* Dark mode styles */
  :global(body.dark-mode) {
    .project-content {
      .project-details {
        color: var(--bodyTextColorWhite);
        
        h2 {
          color: var(--bodyTextColorWhite);
        }
      }
    }
  }
</style>
