---
import Button from "@components/Button.astro";

interface Props {
  // Header section (optional)
  topper?: string;
  title?: string;
  
  // Content section
  heading: string;
  text: string;
  servicesTitle?: string;
  services: string[];
  buttonText: string;
  buttonHref: string;
  
  // Image
  imageSrc: string;
  imageAlt: string;
  imageSrcMobile?: string;
  
  // Layout
  reversed?: boolean;
  showHeader?: boolean;
}

const { 
  topper,
  title,
  heading,
  text,
  servicesTitle = "Services Include:",
  services,
  buttonText,
  buttonHref,
  imageSrc,
  imageAlt,
  imageSrcMobile,
  reversed = false,
  showHeader = false
} = Astro.props;

const sectionId = reversed ? "RPsbsr-2278" : "RPsbs-2278";
---

<section id={sectionId}>
  {showHeader && (
    <div class="cs-header wow animate__fadeInUp">
      {topper && <span class="cs-topper">{topper}</span>}
      {title && <h2 class="cs-title">{title}</h2>}
    </div>
  )}
  <div class="cs-container">
    <!-- Image Section -->
    <picture class="cs-picture wow animate__fadeInLeft" data-wow-delay="0.2s">
      <source 
        media="(max-width: 600px)" 
        srcset={imageSrcMobile || imageSrc}
        type="image/webp"
      />
      <source 
        media="(min-width: 601px)" 
        srcset={imageSrc}
        type="image/webp"
      />
      <img 
        loading="lazy" 
        decoding="async" 
        src={imageSrc} 
        alt={imageAlt} 
        width="413" 
        height="374" 
        aria-hidden="true"
      />
    </picture>
    
    <!-- Content Section -->
    <div class="cs-content wow animate__fadeInRight">
      <h3 class="cs-h3">{heading}</h3>
      <p class="cs-text" set:html={text}></p>
      
      {services.length > 0 && (
        <Fragment>
          <span class="cs-heading">{servicesTitle}</span>
          <ul class="cs-ul">
            {services.map((service) => (
              <li class="cs-li" set:html={service}></li>
            ))}
          </ul>
        </Fragment>
      )}
      
      <Button text={buttonText} href={buttonHref} />
    </div>
  </div>
</section>

<style lang="less">
/*-- -------------------------- -->
<---       Content Section      -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #RPsbs-2278,
    #RPsbsr-2278 {
        background-color: #f7f7f7;
        padding: var(--sectionPadding);
        /* clips the background pseudo from overflowing the section */
        overflow: hidden;
        display: flex;
        flex-direction: column;
        align-items: center;
        /* 48px - 64px, changed clamp at Desktop */
        gap: clamp(3rem, 6vw, 4rem);
        position: relative;
        z-index: 1;

        .cs-header {
            width: 100%;
            /* changes to 1280px at Desktop */
            max-width: (700/16rem);
            margin: auto;
            text-align: center;
        }

        .cs-container {
            padding: var(--sectionPadding);
            padding-left: 0;
            padding-right: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px, changed clamp at tablet */
            gap: clamp(3rem, 6vw, 4rem);
            position: relative;
            z-index: 1;

            &:before {
                /* background with clip-path styling like Button component */
                content: "";
                width: 100vw;
                height: 100%;
                background: #fff;
               
                opacity: 1;
                position: absolute;
                display: block;
                top: 0;
                left: 50%;
                transform: translateX(-50%);
                z-index: -1;
                
/* notch dimensions */
--notch-width: 10px;   /* half the base of the triangle */
        --notch-depth: 10px;   /* height of the triangle */

        /* clip-path with three centered notches: top, right, bottom */
        clip-path: polygon(
            /* top edge */
            0% 0%,
            calc(50% - var(--notch-width)) 0%,
            50% var(--notch-depth),
            calc(50% + var(--notch-width)) 0%,
            100% 0%,
            /* right edge */
            100% calc(50% - var(--notch-width)),
            calc(100% - var(--notch-depth)) 50%,
            100% calc(50% + var(--notch-width)),
            100% 100%,
            /* bottom edge */
            calc(50% + var(--notch-width)) 100%,
            50% calc(100% - var(--notch-depth)),
            calc(50% - var(--notch-width)) 100%,
            /* left edge */
            0% 100%,
            0% 0%
        );
        overflow: hidden;
            }
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            max-width: (686/16rem);
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }

        .cs-title {
            margin: 0;
            max-width: 24ch;
        }

        .cs-h3 {
            /* 25px - 39px */
            font-size: clamp(1.5625rem, 4vw, 2.4375rem);
            line-height: 1.2em;
            margin: 0 0 (16/16rem);
            color: var(--headerColor);
        }

        .cs-text {
            margin-bottom: (16/16rem);
            color: var(--bodyTextColor);

            strong {
                display: inline;
                font-weight: 700;
            }
        }

        .cs-heading {
            font-size: (16/16rem);
            line-height: 1.2em;
            font-weight: 700;
            margin: 0 0 (16/16rem);
            color: var(--headerColor);
        }

        .cs-ul {
            width: 100%;
            margin: 0 0 (32/16rem) 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            gap: (8/16rem);
        }

        .cs-li {
            list-style: none;
            font-size: (16/16rem);
            line-height: 1.5em;
            color: var(--bodyTextColor);
            position: relative;
            display: flex;
            justify-content: flex-start;
            align-items: flex-start;
            gap: (12/16rem);
            position: relative;
            z-index: 1;

            &:before {
                content: '';
                width: (8/16rem);
                height: (8/16rem);
                margin-top: (7/16rem);
                background: var(--primary);
                opacity: 1;
                display: block;
                flex: none;
                transform: rotate(45deg);
            }

            strong {
                display: inline;
                font-weight: 700;
            }
        }

        .cs-picture {
            width: 100%;
            height: 91.14vw;
            max-height: (360/16rem);
            margin: 0;
            position: relative;
            display: block;

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                object-fit: cover;
            }
        }
    }
}

/* Desktop - 768px */
@media only screen and (min-width: 64rem) {
    #RPsbs-2278,
    #RPsbsr-2278 {
        .cs-header {
        }
        
        .cs-container {
            flex-direction: row;
            justify-content: space-between;
            align-items: stretch;

            &:before {
                /* 110px - 335px */
                margin-left: calc(clamp(110px, 14vw, 335px)*-1);
                left: 50%;
                transform: none;
            }
        }

        .cs-picture {
            max-width: (522/16rem);
            height: auto;
            max-height: 100%;
        }
    }
}

/*-- -------------------------- -->
<---   Content Section Reverse  -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #RPsbsr-2278 {
        padding-top: 0;
        padding-bottom: 0;
    }
}

/* Desktop - 768px */
@media only screen and (min-width: 64em) {
    #RPsbsr-2278 {
        padding: var(--sectionPadding);
        padding-top: 0;
        
        .cs-container {
            justify-content: flex-end;

            &:before {
                margin-left: 0;
                /* 110px - 335px */
                margin-right: calc(clamp(110px, 14vw, 335px)*-1);
                right: 50%;
                left: auto;
                transform: none;
            }
        }

        .cs-picture {
            /* sends it to the right in the 2nd position */
            order: 2;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #RPsbs-2278,
        #RPsbsr-2278 {
            background-color: var(--dark);

            .cs-container {
                &:before {
                    background: var(--accent);
                }
            }

            .cs-container {
                &:before {
                    background: var(--accent);
                    border-color: var(--primaryLight);
                }
            }

            .cs-title,
            .cs-h3,
            .cs-heading {
                color: var(--bodyTextColorWhite);
            }

            .cs-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-li {
                color: var(--bodyTextColorWhite);
            }

            .cs-topper {
                color: var(--primaryLight);
            }
        }
    }
}
</style> 